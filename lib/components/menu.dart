import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:smartdalala/components/Display.dart';
import 'package:smartdalala/components/add.dart';
import 'package:http/http.dart' as http;
import 'package:pdf/pdf.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:smartdalala/components/add.dart';
import 'package:smartdalala/components/table.dart';
import 'model.dart';
import 'package:pdf/widgets.dart' as pw;


late Autogenerated originalData; 
late Autogenerated searchData; 
RxBool f=false.obs;


void getsearchDataoriginalData()async{
         
          final SharedPreferences Detailsuser = await SharedPreferences.getInstance();
          // final String id = Detailsuser.getString('id').toString();
          //  http://localhost:5000
          var url="${path}/admin/display/"+userid;
          // print(url);
          try{
          final response = await http.get(Uri.parse(url));
        
          if (response.statusCode == 200) {
              
            //  Autogenerated  data2 = Autogenerated.fromJson(jsonDecode(response.body));
               originalData=Autogenerated.fromJson(jsonDecode(response.body));
               searchData=Autogenerated.fromJson(jsonDecode(response.body));
           
             
          } else {
  
          }
          }catch(e){
              print("error......");
              print(e);
          }
  }



void originalDataRestore()
{ 
    List<Items>? list= List.from(originalData.items!);
    searchData.items= list;//originalData.items; 
  
}



Widget getBack(context)
{
   return InkWell(
       onTap: (){
            originalDataRestore();
            Navigator.pop(context);
       },
       child: Icon(Icons.arrow_back,size: 30,),
   );
}

class Menu extends StatefulWidget {
  const Menu({ Key? key }) : super(key: key);

  @override
  _MenuState createState() => _MenuState();
}

class _MenuState extends State<Menu> {
  late Autogenerated data;
  var menuList=[
       {
          'name':"Add",
           'Icon':Icons.add,
           'navigate':'/Add'
       },
       {
          'name':"Display",
           'Icon':Icons.display_settings,
           'navigate':'/Display'
       },
       {
          'name':"Update",
           'Icon':Icons.update,
           'navigate':'/Add'
       },
       {
          'name':"Delete",
           'Icon':Icons.delete,
           'navigate':'/Delete'
       },
       
       {
          'name':"Due List",
           'Icon':Icons.live_tv_sharp,
           'navigate':'/DueList'
       },   
       {
          'name':"Dalali",
           'Icon':Icons.attach_money_outlined,
           'navigate':'/Dalali'
       },
  ];



   void getdata()async{
         
          final SharedPreferences Detailsuser = await SharedPreferences.getInstance();
          final String id = Detailsuser.getString('id').toString();
          //  http://localhost:5000
          var url="${path}/admin/display/"+userid;
          print(url);
          try{
          final response = await http.get(Uri.parse(url));
          print("response.body ***********************************************");
          print(response.body);
          if (response.statusCode == 200) {
              setState(() {
               data = Autogenerated.fromJson(jsonDecode(response.body));
               originalData=Autogenerated.fromJson(jsonDecode(response.body));
               searchData=Autogenerated.fromJson(jsonDecode(response.body));
              });
             
          } else {
  
          }
          }catch(e){
              print("error......");
              print(e);
          }
  }

 @override
  void initState() {
      getdata();
      super.initState();
  }



  @override
  Widget build(BuildContext context) {
    return Scaffold(
       
       floatingActionButton: CircleAvatar(child: IconButton(onPressed: (){
             Navigator.pushNamed(context, "/Add");
       },icon: Icon(Icons.add),)),
      appBar: AppBar(
               backgroundColor: Colors.orange,
               title:const Center(child: Text("Smart Dalal",style: TextStyle(
                     color: Colors.black,
                     fontSize: 25,
                     fontWeight: FontWeight.bold
               ),)),
          ),
      body: Container(
          width: MediaQuery.of(context).size.width,
          // height: MediaQuery.of(context).size.height/1.1,
          
           child: Center(
             child: Wrap(
                alignment: WrapAlignment.center,
                crossAxisAlignment:WrapCrossAlignment.center,
                 children: [
                       divCard(menuList[0]['name'],menuList[0]['Icon'],menuList[0]['navigate']),
                       divCard(menuList[1]['name'],menuList[1]['Icon'],menuList[1]['navigate']),
                       divCard(menuList[2]['name'],menuList[2]['Icon'],menuList[2]['navigate']),
                       divCard(menuList[3]['name'],menuList[3]['Icon'],menuList[3]['navigate']),
                       divCard(menuList[4]['name'],menuList[4]['Icon'],menuList[4]['navigate']),
                       divCard(menuList[5]['name'],menuList[5]['Icon'],menuList[5]['navigate']),
           
                 ],
             ),
           ),
      ),
    );
  }


 Widget divCard(name,Icons,nav){

  return InkWell(
    onTap: (){
        if(name=="Display"){
             Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => Display(data: data),
              ),
            );
        }else Navigator.pushNamed(context, nav,);  
    },
    child: Container(
      width: 150,
      height: 150,
      child: Card(
          
           child:Column(
               mainAxisAlignment: MainAxisAlignment.center,
               crossAxisAlignment: CrossAxisAlignment.center,
               children: [  
                      Text(name,style:const TextStyle(
                                                  fontSize: 20,
                                                  color: Colors.black,
                                                  fontWeight: FontWeight.bold
                                              ),
                                              textAlign: TextAlign.center,
                       ),
                      const SizedBox(height: 20,),
                      Icon(Icons,size: 40,color: Colors.pink)
                    
               ],
           ), 
      ),
    ),
  );
 }


}